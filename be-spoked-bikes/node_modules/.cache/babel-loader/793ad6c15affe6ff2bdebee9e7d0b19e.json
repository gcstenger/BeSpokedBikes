{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\src\\\\components\\\\Pages\\\\Salesperson\\\\Salespersons.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport axios from '../../../axios';\nimport Salesperson from './Salesperson';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport Modal from '../../UI/Modal/Modal';\nimport SalespersonEdit from './Edit/SalespersonEdit';\nimport Button from '../../UI/Button/Button';\nimport { Route, NavLink, Switch } from 'react-router-dom';\n\nclass Salespersons extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      salespersons: null,\n      selectedSalesperson: null,\n      id: null,\n      firstName: '',\n      lastName: '',\n      address: '',\n      phone: '',\n      startDate: null,\n      terminationDate: null,\n      manager: '',\n      loading: true,\n      error: null,\n      editing: false\n    };\n\n    this.editCancelHandler = () => {\n      this.setState({\n        editing: false\n      });\n    };\n\n    this.editContinueHandler = () => {\n      this.setState({\n        editing: true\n      });\n    };\n\n    this.salesPersonEditHandler = salesperson => {\n      this.setState({\n        selectedSalesperson: salesperson,\n        editing: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/Salespersons').then(response => {\n      this.setState({\n        salespersons: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    let salesPersonEdit = null;\n    let list = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Data can't be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n\n    if (this.state.salespersons) {\n      list = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.salespersons.map(salesperson => {\n        console.log(\"salesperson: \", salesperson);\n        return React.createElement(Aux, {\n          key: salesperson.Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/posts/\",\n          exact: true,\n          activeClassName: \"my-active\",\n          activeStyle: {\n            color: '#fa923f',\n            textDecoration: 'underline'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Posts\")), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: {\n            pathname: '/new-post',\n            hash: '#submit',\n            search: '?quick-submit=true'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"New Post\"))))), React.createElement(Salesperson, {\n          id: salesperson.Id,\n          firstName: salesperson.FirstName,\n          lastName: salesperson.LastName,\n          address: salesperson.Address,\n          phone: salesperson.Phone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(Button, {\n          btnType: \"Success\",\n          clicked: this.salesPersonEditHandler(salesperson),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/salespersons\",\n          component: Salespersons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/salesperson-edit\",\n          component: SalespersonEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })));\n      }));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.editing,\n      modalClosed: this.editCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, salesPersonEdit), list);\n  }\n\n}\n\nexport default Salespersons;","map":{"version":3,"sources":["D:/Development/Profisee/be-spoked-bikes/src/components/Pages/Salesperson/Salespersons.js"],"names":["React","Component","Aux","axios","Salesperson","Spinner","Modal","SalespersonEdit","Button","Route","NavLink","Switch","Salespersons","state","salespersons","selectedSalesperson","id","firstName","lastName","address","phone","startDate","terminationDate","manager","loading","error","editing","editCancelHandler","setState","editContinueHandler","salesPersonEditHandler","salesperson","componentDidMount","get","then","response","data","catch","render","salesPersonEdit","list","map","console","log","Id","color","textDecoration","pathname","hash","search","FirstName","LastName","Address","Phone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../../axios';\r\nimport Salesperson from './Salesperson';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport SalespersonEdit from './Edit/SalespersonEdit';\r\nimport Button from '../../UI/Button/Button';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\n\r\nclass Salespersons extends Component {\r\n\r\n    state = {\r\n        salespersons: null,\r\n        selectedSalesperson: null,\r\n        id: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        phone: '',\r\n        startDate: null,\r\n        terminationDate: null,\r\n        manager: '',\r\n        loading: true,\r\n        error: null,\r\n        editing: false\r\n    };\r\n\r\n    componentDidMount () {\r\n        axios.get('/api/Salespersons')\r\n            .then(response => {\r\n                this.setState({ salespersons: response.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            });\r\n    }\r\n\r\n    editCancelHandler = () => {\r\n        this.setState({editing: false});\r\n    }\r\n\r\n    editContinueHandler = () => {\r\n        this.setState({editing: true});\r\n    }\r\n\r\n    salesPersonEditHandler = (salesperson) => {\r\n        this.setState({selectedSalesperson: salesperson, editing: true})\r\n    }\r\n\r\n    render() {\r\n        let salesPersonEdit = null;\r\n        let list = this.state.error ? <p>Data can't be loaded</p> : <Spinner />;\r\n        if (this.state.salespersons) {\r\n            list = (\r\n                <Aux>\r\n                    {this.state.salespersons.map(salesperson => {\r\n                        console.log(\"salesperson: \", salesperson);\r\n                        return (\r\n                            <Aux key={salesperson.Id}>\r\n                            <header>\r\n                                <nav>\r\n                                    <ul>\r\n                                        <li><NavLink\r\n                                            to=\"/posts/\"\r\n                                            exact\r\n                                            activeClassName=\"my-active\"\r\n                                            activeStyle={{\r\n                                                color: '#fa923f',\r\n                                                textDecoration: 'underline'\r\n                                            }}>Posts</NavLink></li>\r\n                                        <li><NavLink to={{\r\n                                            pathname: '/new-post',\r\n                                            hash: '#submit',\r\n                                            search: '?quick-submit=true'\r\n                                        }}>New Post</NavLink></li>\r\n                                    </ul>\r\n                                </nav>\r\n                            </header>\r\n                                <Salesperson \r\n                                    id={salesperson.Id} \r\n                                    firstName={salesperson.FirstName}\r\n                                    lastName={salesperson.LastName} \r\n                                    address={salesperson.Address} \r\n                                    phone={salesperson.Phone}   />\r\n                                <Button btnType=\"Success\" clicked={this.salesPersonEditHandler(salesperson)}>Edit</Button>\r\n                                <Switch>\r\n                                    <Route path=\"/salespersons\" component={Salespersons} />\r\n                                    <Route path=\"/salesperson-edit\" component={SalespersonEdit} />\r\n                                </Switch>\r\n                            </Aux>\r\n                        )\r\n                    })}\r\n                </Aux>\r\n            );\r\n\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                    show={this.state.editing}\r\n                    modalClosed={this.editCancelHandler}>\r\n                    {salesPersonEdit}\r\n                </Modal>\r\n                {list}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Salespersons;"]},"metadata":{},"sourceType":"module"}