{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\src\\\\components\\\\Pages\\\\Product\\\\Products.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport axios from '../../../axios';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport ProductsEdit from './Edit/ProductsEdit';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport classes from './Products.module.css';\n\nclass Products extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      selectedProduct: null,\n      loading: true,\n      error: null,\n      editing: false\n    };\n\n    this.editCancelHandler = () => {//this.setState({editing: false});\n    };\n\n    this.editContinueHandler = () => {//this.setState({editing: true});\n    };\n\n    this.salesPersonEditHandler = product => {//this.setState({selectedSalesperson: salesperson, editing: true})\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/Products').then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    //let salesPersonEdit = null;\n    let list = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Data can't be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n\n    if (this.state.products) {\n      list = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: classes.List,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Manufacturer\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Style\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Purchase Price\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Sale Price\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Qty on Hand\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Commission %\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Action\")), this.state.products.map(product => {\n        //console.log(\"salesperson: \", salesperson);\n        return React.createElement(\"ul\", {\n          key: product.Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, product.Name), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, product.Manufacturer), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, product.Style), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, product.PurchasePrice.toFixed(2)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, product.SalePrice.toFixed(2)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, product.QtyOnHand), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, product.CommissionPercentage), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: '/product/' + product.Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Edit\")));\n      }))));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, list, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: '/product/:id',\n      exact: true,\n      component: ProductsEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["D:/Development/Profisee/be-spoked-bikes/src/components/Pages/Product/Products.js"],"names":["React","Component","Aux","axios","Spinner","ProductsEdit","Route","NavLink","Switch","classes","Products","state","products","selectedProduct","loading","error","editing","editCancelHandler","editContinueHandler","salesPersonEditHandler","product","componentDidMount","get","then","response","setState","data","catch","render","list","List","map","Id","Name","Manufacturer","Style","PurchasePrice","toFixed","SalePrice","QtyOnHand","CommissionPercentage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../../axios';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport ProductsEdit from './Edit/ProductsEdit';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\nimport classes from './Products.module.css';\r\n\r\nclass Products extends Component {\r\n\r\n    state = {\r\n        products: null,\r\n        selectedProduct: null,\r\n        loading: true,\r\n        error: null,\r\n        editing: false\r\n    };\r\n\r\n    componentDidMount () {\r\n        axios.get('/api/Products')\r\n            .then(response => {\r\n                this.setState({ products: response.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            });\r\n    }\r\n\r\n    editCancelHandler = () => {\r\n        //this.setState({editing: false});\r\n    }\r\n\r\n    editContinueHandler = () => {\r\n        //this.setState({editing: true});\r\n    }\r\n\r\n    salesPersonEditHandler = (product) => {\r\n        //this.setState({selectedSalesperson: salesperson, editing: true})\r\n    }\r\n\r\n    render() {\r\n        //let salesPersonEdit = null;\r\n        let list = this.state.error ? <p>Data can't be loaded</p> : <Spinner />;\r\n        if (this.state.products) {\r\n            list = (\r\n                <Aux>\r\n                    <ul className={ classes.List }>\r\n                        <li>\r\n                            <ul>\r\n                                <li>Name</li>\r\n                                <li>Manufacturer</li>\r\n                                <li>Style</li>\r\n                                <li>Purchase Price</li>\r\n                                <li>Sale Price</li>\r\n                                <li>Qty on Hand</li>\r\n                                <li>Commission %</li>\r\n                                <li>Action</li>\r\n                            </ul>\r\n                            {this.state.products.map(product => {\r\n                                //console.log(\"salesperson: \", salesperson);\r\n                                return (\r\n                                    <ul key={product.Id}>\r\n                                        <li>{product.Name}</li>\r\n                                        <li>{product.Manufacturer}</li>\r\n                                        <li>{product.Style}</li>\r\n                                        <li>{product.PurchasePrice.toFixed(2)}</li>\r\n                                        <li>{product.SalePrice.toFixed(2)}</li>\r\n                                        <li>{product.QtyOnHand}</li>\r\n                                        <li>{product.CommissionPercentage}</li>\r\n                                        <li>\r\n                                            <NavLink to={'/product/' + product.Id }>Edit</NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })}\r\n                        </li>\r\n                    </ul>\r\n                </Aux>\r\n            );\r\n\r\n        }\r\n        return (\r\n            <Aux>\r\n                {list}\r\n                <Switch>\r\n                    <Route path={'/product/:id'} exact component={ProductsEdit} />\r\n                </Switch>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;"]},"metadata":{},"sourceType":"module"}