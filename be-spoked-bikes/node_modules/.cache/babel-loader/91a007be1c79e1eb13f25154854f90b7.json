{"ast":null,"code":"import _defineProperty from \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\src\\\\components\\\\Pages\\\\Sales\\\\New\\\\SalesNew.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, ReactDOM } from 'react';\nimport axios from '../../../../axios';\nimport Aux from '../../../../hoc/Auxiliary/Auxiliary';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Button from '../../../UI/Button/Button';\nimport classes from './SalesNew.module.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass SalesEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      customers: null,\n      salespersons: null,\n      sales: {\n        product: null,\n        salesperson: null,\n        customer: null,\n        date: null\n      },\n      saleDate: null,\n      error: false\n    };\n\n    this.inputChangeHandler = (event, id) => {\n      // var stateObject = function() {\n      //     let returnObj = {\n      //         ...this.state\n      //     };\n      //     returnObj[this.target.name] = this.target.value;\n      //        return returnObj;\n      //   }.bind(event)();\n      // console.log(this.state);\n      // this.setState({ stateObject })\n      console.log(this.state); //this.setState({ [event.target.name]: event.target.value});\n\n      const updatedSale = _objectSpread({}, this.state.sales);\n\n      const updatedFormElement = _objectSpread({}, updatedSale[id]); //updatedFormElement.value = event.target.value;\n      //console.log(typeof(updatedFormElement));\n\n\n      updatedSale[id] = updatedFormElement;\n      this.setState({\n        sale: updatedSale\n      });\n    };\n\n    this.submitHandler = event => {\n      this.state.inputs.map(function (item, i) {\n        console.log(ReactDOM.findDOMNode(this.refs['input-' + i]).value);\n      }.bind(this));\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.salesForm) {\n        formData[formElementIdentifier] = this.state.salesForm[formElementIdentifier].value;\n      } // const submission = {\n      //     formData: formData\n      // }\n\n\n      const pathname = this.props.location.pathname;\n      console.log(formData);\n      axios.put('/api/Sales/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length), formData).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          error: true\n        });\n      });\n    };\n\n    this.editCancelled = () => {\n      this.props.history.push('/sales');\n    };\n\n    this.saleDateChangeHandler = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/Products').then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n    axios.get('/api/Customers').then(response => {\n      this.setState({\n        customers: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n    axios.get('/api/Salespersons').then(response => {\n      this.setState({\n        salespersons: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    let products = [{\n      value: '',\n      label: '--- Please Select a Product---'\n    }];\n\n    if (this.state.products) {\n      for (let product in this.state.products) {\n        products.push({\n          value: this.state.products[product].Id,\n          label: this.state.products[product].Name\n        });\n      }\n    }\n\n    ;\n    let customers = [{\n      value: '',\n      label: '--- Please Select a Customer---'\n    }];\n\n    if (this.state.customers) {\n      for (let customer in this.state.customers) {\n        customers.push({\n          value: this.state.customers[customer].Id,\n          label: this.state.customers[customer].FirstName + ' ' + this.state.customers[customer].LastName\n        });\n      }\n    }\n\n    ;\n    console.log(customers);\n    let salespersons = [{\n      value: '',\n      label: '--- Please Select a Salesperson---'\n    }];\n\n    if (this.state.salespersons) {\n      for (let salesperson in this.state.salespersons) {\n        salespersons.push({\n          value: this.state.salespersons[salesperson].Id,\n          label: this.state.salespersons[salesperson].FirstName + ' ' + this.state.salespersons[salesperson].LastName\n        });\n      }\n    }\n\n    ;\n    let form = React.createElement(\"ul\", {\n      className: classes.Form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Product:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"Product\",\n      defaultValue: \"\",\n      onChange: event => this.inputChangeHandler(event, 'Product'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, products.map(p => {\n      return React.createElement(\"option\", {\n        key: 'product' + p.value,\n        value: p.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, p.label);\n    }), \"}\"))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Customer:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"Customer\",\n      defaultValue: \"\",\n      onChange: event => this.inputChangeHandler(event, 'Customer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, customers.map(p => {\n      return React.createElement(\"option\", {\n        key: 'customer' + p.value,\n        value: p.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, p.label);\n    }), \"}\"))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Salesperson:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"Salesperson\",\n      defaultValue: \"\",\n      onChange: event => this.inputChangeHandler(event, 'Salesperson'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, salespersons.map(p => {\n      return React.createElement(\"option\", {\n        key: 'salesperson' + p.value,\n        value: p.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, p.label);\n    }), \"}\"))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Sale Date:\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      name: \"SalesDate\",\n      defaultValue: \"\",\n      selected: this.state.sales.date,\n      onChange: event => this.inputChangeHandler(event, 'SalesDate'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })))));\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"New Sale\"), form, React.createElement(Button, {\n      btnType: \"Danger\",\n      clicked: this.editCancelled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"CANCEL\"), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.props.editContinued,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"CONTINUE\")));\n  }\n\n}\n\nexport default SalesEdit;","map":{"version":3,"sources":["D:/Development/Profisee/be-spoked-bikes/src/components/Pages/Sales/New/SalesNew.js"],"names":["React","Component","ReactDOM","axios","Aux","Spinner","Button","classes","DatePicker","SalesEdit","state","products","customers","salespersons","sales","product","salesperson","customer","date","saleDate","error","inputChangeHandler","event","id","console","log","updatedSale","updatedFormElement","setState","sale","submitHandler","inputs","map","item","i","findDOMNode","refs","value","bind","preventDefault","loading","formData","formElementIdentifier","salesForm","pathname","props","location","put","substring","lastIndexOf","length","then","response","history","push","catch","editCancelled","saleDateChangeHandler","startDate","componentDidMount","get","data","render","label","Id","Name","FirstName","LastName","form","Form","p","editContinued"],"mappings":"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","sourcesContent":["import React, { Component, ReactDOM } from 'react';\r\nimport axios from '../../../../axios';\r\nimport Aux from '../../../../hoc/Auxiliary/Auxiliary';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport Button from '../../../UI/Button/Button';\r\nimport classes from './SalesNew.module.css';\r\nimport DatePicker from \"react-datepicker\";\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass SalesEdit extends Component {\r\n\r\n    state = {\r\n        products: null,\r\n        customers: null,\r\n        salespersons: null,\r\n        sales: {\r\n            product: null,\r\n            salesperson: null,\r\n            customer: null,\r\n            date: null\r\n        },\r\n        saleDate: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('/api/Products')\r\n            .then(response => {\r\n                this.setState({ products: response.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            });\r\n            \r\n        axios.get('/api/Customers')\r\n        .then(response => {\r\n            this.setState({ customers: response.data });\r\n        })\r\n        .catch(error => {\r\n            this.setState({ error: true })\r\n        });\r\n        \r\n        axios.get('/api/Salespersons')\r\n            .then(response => {\r\n                this.setState({ salespersons: response.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            });\r\n    }\r\n    inputChangeHandler = (event, id) => {\r\n        // var stateObject = function() {\r\n        //     let returnObj = {\r\n        //         ...this.state\r\n        //     };\r\n        //     returnObj[this.target.name] = this.target.value;\r\n        //        return returnObj;\r\n        //   }.bind(event)();\r\n        // console.log(this.state);\r\n        // this.setState({ stateObject })\r\n        console.log(this.state);\r\n        //this.setState({ [event.target.name]: event.target.value});\r\n        \r\n        const updatedSale = {\r\n            ...this.state.sales\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedSale[id]\r\n        };\r\n        //updatedFormElement.value = event.target.value;\r\n        //console.log(typeof(updatedFormElement));\r\n        updatedSale[id] = updatedFormElement;\r\n        this.setState({ sale: updatedSale });\r\n    }\r\n\r\n    submitHandler = ( event ) => {\r\n        this.state.inputs.map( function(item, i) {\r\n          console.log(ReactDOM.findDOMNode(this.refs['input-' + i]).value);\r\n        }.bind(this))\r\n\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.salesForm) {\r\n            formData[formElementIdentifier] = this.state.salesForm[formElementIdentifier].value;\r\n        }\r\n        // const submission = {\r\n        //     formData: formData\r\n        // }\r\n        const pathname = this.props.location.pathname;\r\n        console.log(formData);\r\n        axios.put(\r\n            '/api/Sales/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length), formData)\r\n            .then(response => {\r\n                this.setState({ loading: false });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false, error: true })\r\n            });\r\n    }\r\n\r\n    editCancelled = () => {\r\n        this.props.history.push('/sales');\r\n    }\r\n\r\n    saleDateChangeHandler = date => {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let products = [{ value: '', label: '--- Please Select a Product---'}];\r\n        if (this.state.products) {\r\n            for (let product in this.state.products) {\r\n                products.push({ value: this.state.products[product].Id, label: this.state.products[product].Name })\r\n            }\r\n        };\r\n        let customers = [{ value: '', label: '--- Please Select a Customer---'}];\r\n        if (this.state.customers) {\r\n            for (let customer in this.state.customers) {\r\n                customers.push({ value: this.state.customers[customer].Id, label: this.state.customers[customer].FirstName + ' ' + this.state.customers[customer].LastName })\r\n            }\r\n        };\r\n        console.log(customers);\r\n        let salespersons = [{ value: '', label: '--- Please Select a Salesperson---'}];\r\n        if (this.state.salespersons) {\r\n            for (let salesperson in this.state.salespersons) {\r\n                salespersons.push({ value: this.state.salespersons[salesperson].Id, label: this.state.salespersons[salesperson].FirstName + ' ' + this.state.salespersons[salesperson].LastName })\r\n            }\r\n        };\r\n        let form = (\r\n            <ul className={ classes.Form }>\r\n                <li>\r\n                    <ul>\r\n                        <li>Product:</li>\r\n                        <li>\r\n                            <select name=\"Product\"\r\n                                defaultValue=\"\"\r\n                                onChange={(event) => this.inputChangeHandler(event, 'Product')}>\r\n                                { products.map(p => {\r\n                                        return (\r\n                                            <option key={'product'+p.value} value={p.value}>{p.label}</option>\r\n                                        )\r\n                                    }\r\n                                )}}\r\n                            </select>\r\n                        </li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>Customer:</li>\r\n                        <li>\r\n                            <select name=\"Customer\"\r\n                                defaultValue=\"\"\r\n                                onChange={(event) => this.inputChangeHandler(event, 'Customer')}>\r\n                                { customers.map(p => {\r\n                                        return (\r\n                                            <option key={'customer'+p.value} value={p.value}>{p.label}</option>\r\n                                        )\r\n                                    }\r\n                                )}}\r\n                            </select>\r\n                        </li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>Salesperson:</li>\r\n                        <li>\r\n                            <select name=\"Salesperson\"\r\n                                defaultValue=\"\"\r\n                                onChange={(event) => this.inputChangeHandler(event, 'Salesperson')}>\r\n                                { salespersons.map(p => {\r\n                                        return (\r\n                                            <option key={'salesperson'+p.value} value={p.value}>{p.label}</option>\r\n                                        )\r\n                                    }\r\n                                )}}\r\n                            </select>\r\n                        </li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>Sale Date:</li>\r\n                        <li>\r\n                            <DatePicker\r\n                                name=\"SalesDate\" \r\n                                defaultValue=\"\" \r\n                                selected={this.state.sales.date}\r\n                                onChange={(event) => this.inputChangeHandler(event, 'SalesDate')} /></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        );\r\n        return (\r\n            <Aux>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <h3>New Sale</h3>\r\n                    {form}\r\n                    <Button \r\n                        btnType=\"Danger\"\r\n                        clicked={this.editCancelled}>CANCEL</Button>\r\n                    <Button \r\n                        btnType=\"Success\"\r\n                        clicked={this.props.editContinued}>CONTINUE</Button>\r\n                </form>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalesEdit;"]},"metadata":{},"sourceType":"module"}