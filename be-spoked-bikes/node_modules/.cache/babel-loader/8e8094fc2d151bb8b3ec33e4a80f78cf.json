{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\src\\\\components\\\\Pages\\\\Sales\\\\Sales.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport axios from '../../../axios';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport SalesEdit from './Edit/SalesEdit';\nimport SalesNew from './New/SalesNew';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport classes from './Sales.module.css';\nimport Button from '../../UI/Button/Button';\n\nclass Salespersons extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sales: null,\n      selectedSale: null,\n      loading: true,\n      error: null,\n      editing: false\n    };\n\n    this.editCancelHandler = () => {//this.setState({editing: false});\n    };\n\n    this.editContinueHandler = () => {//this.setState({editing: true});\n    };\n\n    this.salesPersonEditHandler = salesperson => {//this.setState({selectedSalesperson: salesperson, editing: true})\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/Sales').then(response => {\n      this.setState({\n        sales: response.data\n      });\n      console.log(this.state.sales);\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    //let salesPersonEdit = null;\n    let list = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Data can't be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n\n    if (this.state.sales) {\n      list = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: classes.List,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Customer\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Salesperson\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Sale Date\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Action\")), this.state.sales.map(sale => {\n        //console.log(\"salesperson: \", salesperson);\n        return React.createElement(\"ul\", {\n          key: sale.Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, sale.FirstName), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, sale.LastName), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, sale.Address), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, sale.Phone), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: '/sale/' + sale.Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Edit\")));\n      }))));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, list, React.createElement(NavLink, {\n      to: \"/salesnew\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Button, {\n      btnType: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"New Sale\")), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: '/sale/:id',\n      exact: true,\n      component: SalesEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/salesnew',\n      exact: true,\n      component: SalesNew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Salespersons;","map":{"version":3,"sources":["D:/Development/Profisee/be-spoked-bikes/src/components/Pages/Sales/Sales.js"],"names":["React","Component","Aux","axios","Spinner","SalesEdit","SalesNew","Route","NavLink","Switch","classes","Button","Salespersons","state","sales","selectedSale","loading","error","editing","editCancelHandler","editContinueHandler","salesPersonEditHandler","salesperson","componentDidMount","get","then","response","setState","data","console","log","catch","render","list","List","map","sale","Id","FirstName","LastName","Address","Phone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../../axios';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport SalesEdit from './Edit/SalesEdit';\r\nimport SalesNew from './New/SalesNew';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\nimport classes from './Sales.module.css';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass Salespersons extends Component {\r\n\r\n    state = {\r\n        sales: null,\r\n        selectedSale: null,\r\n        loading: true,\r\n        error: null,\r\n        editing: false\r\n    };\r\n\r\n    componentDidMount () {\r\n        axios.get('/api/Sales')\r\n            .then(response => {\r\n                this.setState({ sales: response.data });\r\n                console.log(this.state.sales);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            });\r\n    }\r\n\r\n    editCancelHandler = () => {\r\n        //this.setState({editing: false});\r\n    }\r\n\r\n    editContinueHandler = () => {\r\n        //this.setState({editing: true});\r\n    }\r\n\r\n    salesPersonEditHandler = (salesperson) => {\r\n        //this.setState({selectedSalesperson: salesperson, editing: true})\r\n    }\r\n\r\n    render() {\r\n        //let salesPersonEdit = null;\r\n        let list = this.state.error ? <p>Data can't be loaded</p> : <Spinner />;\r\n        if (this.state.sales) {\r\n            list = (\r\n                <Aux>\r\n                    <ul className={ classes.List }>\r\n                        <li>\r\n                            <ul>\r\n                                <li>Product</li>\r\n                                <li>Customer</li>\r\n                                <li>Salesperson</li>\r\n                                <li>Sale Date</li>\r\n                                <li>Action</li>\r\n                            </ul>\r\n                            {this.state.sales.map(sale => {\r\n                                //console.log(\"salesperson: \", salesperson);\r\n                                return (\r\n                                    <ul key={sale.Id}>\r\n                                        <li>{sale.FirstName}</li>\r\n                                        <li>{sale.LastName}</li>\r\n                                        <li>{sale.Address}</li>\r\n                                        <li>{sale.Phone}</li>\r\n                                        <li>\r\n                                            <NavLink to={'/sale/' + sale.Id }>Edit</NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })}\r\n                        </li>\r\n                    </ul>\r\n                </Aux>\r\n            );\r\n\r\n        }\r\n        return (\r\n            <Aux>\r\n                {list}\r\n                <NavLink \r\n                    to=\"/salesnew\"\r\n                    >\r\n                    <Button \r\n                        btnType=\"btn-primary\">New Sale</Button>\r\n                </NavLink>\r\n                <Switch>\r\n                    <Route path={'/sale/:id'} exact component={SalesEdit} />\r\n                    <Route path={'/salesnew'} exact component={SalesNew} />\r\n                </Switch>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Salespersons;"]},"metadata":{},"sourceType":"module"}