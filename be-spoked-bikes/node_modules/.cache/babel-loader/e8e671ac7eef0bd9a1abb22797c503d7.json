{"ast":null,"code":"import _defineProperty from \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\src\\\\components\\\\Pages\\\\Salesperson\\\\Edit\\\\SalespersonEdit.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, ReactDOM } from 'react';\nimport axios from '../../../../axios';\nimport Aux from '../../../../hoc/Auxiliary/Auxiliary';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Button from '../../../UI/Button/Button';\nimport classes from './SalespersonEdit.module.css';\nimport Input from '../../../UI/Input/Input';\n\nclass SalespersonEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      salesperson: null,\n      error: false\n    };\n\n    this.inputChangeHandler = (event, id) => {\n      // var stateObject = function() {\n      //     let returnObj = {\n      //         ...this.state\n      //     };\n      //     returnObj[this.target.name] = this.target.value;\n      //        return returnObj;\n      //   }.bind(event)();\n      // console.log(this.state);\n      // this.setState({ stateObject })\n      console.log(this.state); //this.setState({ [event.target.name]: event.target.value});\n\n      const updatedSalesperson = _objectSpread({}, this.state.salesperson);\n\n      const updatedFormElement = _objectSpread({}, updatedSalesperson[id]); //updatedFormElement.value = event.target.value;\n\n\n      console.log(typeof updatedFormElement);\n      updatedSalesperson[id] = updatedFormElement;\n      this.setState({\n        salesperson: updatedSalesperson\n      });\n    };\n\n    this.submitHandler = event => {\n      this.state.inputs.map(function (item, i) {\n        console.log(ReactDOM.findDOMNode(this.refs['input-' + i]).value);\n      }.bind(this));\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.salespersonForm) {\n        formData[formElementIdentifier] = this.state.salespersonForm[formElementIdentifier].value;\n      }\n\n      const submission = {\n        formData: formData\n      };\n      const pathname = this.props.location.pathname;\n      console.log(formData);\n      axios.put('/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length), formData).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          error: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('[SalespersonEdit] props = ', this.props);\n    const pathname = this.props.location.pathname;\n    axios.get('/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length)).then(response => {\n      this.setState({\n        salesperson: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    let form = null;\n\n    if (this.state.salesperson) {\n      form = React.createElement(\"ul\", {\n        className: classes.Form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"FirstName\",\n        defaultValue: this.state.salesperson.FirstName,\n        onChange: event => this.inputChangeHandler(event, 'FirstName'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"LastName\",\n        defaultValue: this.state.salesperson.LastName,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Address:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"Address\",\n        defaultValue: this.state.salesperson.Address,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Phone:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"Phone\",\n        defaultValue: this.state.salesperson.Phone,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Manager:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"Manager\",\n        defaultValue: this.state.salesperson.Manager,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })))));\n    } else if (this.state.error) {\n      form = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"An error has occurred.\");\n    } else {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Edit Salesperson\"), form, React.createElement(Button, {\n      btnType: \"Danger\",\n      clicked: this.props.editCancelled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"CANCEL\"), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.props.editContinued,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"CONTINUE\")));\n  }\n\n}\n\nexport default SalespersonEdit;","map":{"version":3,"sources":["D:/Development/Profisee/be-spoked-bikes/src/components/Pages/Salesperson/Edit/SalespersonEdit.js"],"names":["React","Component","ReactDOM","axios","Aux","Spinner","Button","classes","Input","SalespersonEdit","state","salesperson","error","inputChangeHandler","event","id","console","log","updatedSalesperson","updatedFormElement","setState","submitHandler","inputs","map","item","i","findDOMNode","refs","value","bind","preventDefault","loading","formData","formElementIdentifier","salespersonForm","submission","pathname","props","location","put","substring","lastIndexOf","length","then","response","history","push","catch","componentDidMount","get","data","render","form","Form","FirstName","LastName","Address","Phone","Manager","editCancelled","editContinued"],"mappings":"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","sourcesContent":["import React, { Component, ReactDOM } from 'react';\r\nimport axios from '../../../../axios';\r\nimport Aux from '../../../../hoc/Auxiliary/Auxiliary';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport Button from '../../../UI/Button/Button';\r\nimport classes from './SalespersonEdit.module.css';\r\nimport Input from '../../../UI/Input/Input';\r\n\r\nclass SalespersonEdit extends Component {\r\n\r\n    state = {\r\n        salesperson: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log('[SalespersonEdit] props = ', this.props);\r\n        const pathname = this.props.location.pathname;\r\n        axios.get('/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length))\r\n            .then(response => {\r\n                this.setState({ salesperson: response.data });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ error: true })\r\n            });\r\n    }\r\n    inputChangeHandler = (event, id) => {\r\n        // var stateObject = function() {\r\n        //     let returnObj = {\r\n        //         ...this.state\r\n        //     };\r\n        //     returnObj[this.target.name] = this.target.value;\r\n        //        return returnObj;\r\n        //   }.bind(event)();\r\n        // console.log(this.state);\r\n        // this.setState({ stateObject })\r\n        console.log(this.state);\r\n        //this.setState({ [event.target.name]: event.target.value});\r\n        \r\n        const updatedSalesperson = {\r\n            ...this.state.salesperson\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedSalesperson[id]\r\n        };\r\n        //updatedFormElement.value = event.target.value;\r\n        console.log(typeof(updatedFormElement));\r\n        updatedSalesperson[id] = updatedFormElement;\r\n        this.setState({ salesperson: updatedSalesperson });\r\n    }\r\n\r\n    submitHandler = ( event ) => {\r\n        this.state.inputs.map( function(item, i) {\r\n          console.log(ReactDOM.findDOMNode(this.refs['input-' + i]).value);\r\n        }.bind(this))\r\n\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.salespersonForm) {\r\n            formData[formElementIdentifier] = this.state.salespersonForm[formElementIdentifier].value;\r\n        }\r\n        const submission = {\r\n            formData: formData\r\n        }\r\n        const pathname = this.props.location.pathname;\r\n        console.log(formData);\r\n        axios.put(\r\n            '/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length), formData)\r\n            .then(response => {\r\n                this.setState({ loading: false });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false, error: true })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let form = null;\r\n        if (this.state.salesperson) {\r\n            form = (\r\n                <ul className={ classes.Form }>\r\n                    <li>\r\n                        <ul>\r\n                            <li>First Name:</li>\r\n                            <li><input type=\"text\" name=\"FirstName\" defaultValue={this.state.salesperson.FirstName} onChange={(event) => this.inputChangeHandler(event, 'FirstName')} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Last Name:</li>\r\n                            <li><input type=\"text\" name=\"LastName\" defaultValue={this.state.salesperson.LastName} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Address:</li>\r\n                            <li><textarea name=\"Address\" defaultValue={this.state.salesperson.Address} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Phone:</li>\r\n                            <li><input type=\"text\" name=\"Phone\" defaultValue={this.state.salesperson.Phone} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Manager:</li>\r\n                            <li><input type=\"text\" name=\"Manager\" defaultValue={this.state.salesperson.Manager} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        } else if (this.state.error) {\r\n            form = (\r\n                <div>An error has occurred.</div>\r\n            );\r\n        } else {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <Aux>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <h3>Edit Salesperson</h3>\r\n                    {form}\r\n                    <Button \r\n                        btnType=\"Danger\"\r\n                        clicked={this.props.editCancelled}>CANCEL</Button>\r\n                    <Button \r\n                        btnType=\"Success\"\r\n                        clicked={this.props.editContinued}>CONTINUE</Button>\r\n                </form>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalespersonEdit;"]},"metadata":{},"sourceType":"module"}