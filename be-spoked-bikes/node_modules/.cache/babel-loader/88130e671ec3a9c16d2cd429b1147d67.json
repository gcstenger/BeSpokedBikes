{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Profisee\\\\be-spoked-bikes\\\\src\\\\components\\\\Pages\\\\Salesperson\\\\Edit\\\\SalespersonEdit.js\";\nimport React, { Component, ReactDOM } from 'react';\nimport axios from '../../../../axios';\nimport Aux from '../../../../hoc/Auxiliary/Auxiliary';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Button from '../../../UI/Button/Button';\nimport classes from './SalespersonEdit.module.css';\nimport Input from '../../../UI/Input/Input';\n\nclass SalespersonEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      salesperson: null,\n      error: false\n    };\n\n    this.inputChangeHandler = event => {\n      const targetName = event.target.name;\n      const targetValue = event.target.value; //console.log(event.target.name);\n      //console.log(this.state.salesperson[targetName]);\n\n      this.setState({\n        targetName: targetValue\n      });\n    };\n\n    this.submitHandler = event => {\n      this.state.inputs.map(function (item, i) {\n        console.log(ReactDOM.findDOMNode(this.refs['input-' + i]).value);\n      }.bind(this));\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (let formElementIdentifier in this.state.salespersonForm) {\n        formData[formElementIdentifier] = this.state.salespersonForm[formElementIdentifier].value;\n      }\n\n      const submission = {\n        formData: formData\n      };\n      const pathname = this.props.location.pathname;\n      console.log(formData);\n      axios.put('/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length), formData).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          error: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('[SalespersonEdit] props = ', this.props);\n    const pathname = this.props.location.pathname;\n    axios.get('/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length)).then(response => {\n      this.setState({\n        salesperson: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    let form = null;\n\n    if (this.state.salesperson) {\n      form = React.createElement(\"ul\", {\n        className: classes.Form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"FirstName\",\n        defaultValue: this.state.salesperson.FirstName,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"LastName\",\n        defaultValue: this.state.salesperson.LastName,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Address:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"Address\",\n        defaultValue: this.state.salesperson.Address,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Phone:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"Phone\",\n        defaultValue: this.state.salesperson.Phone,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Manager:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"Manager\",\n        defaultValue: this.state.salesperson.Manager,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))));\n    } else if (this.state.error) {\n      form = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"An error has occurred.\");\n    } else {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Edit Salesperson\"), form, React.createElement(Button, {\n      btnType: \"Danger\",\n      clicked: this.props.editCancelled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"CANCEL\"), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.props.editContinued,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"CONTINUE\")));\n  }\n\n}\n\nexport default SalespersonEdit;","map":{"version":3,"sources":["D:/Development/Profisee/be-spoked-bikes/src/components/Pages/Salesperson/Edit/SalespersonEdit.js"],"names":["React","Component","ReactDOM","axios","Aux","Spinner","Button","classes","Input","SalespersonEdit","state","salesperson","error","inputChangeHandler","event","targetName","target","name","targetValue","value","setState","submitHandler","inputs","map","item","i","console","log","findDOMNode","refs","bind","preventDefault","loading","formData","formElementIdentifier","salespersonForm","submission","pathname","props","location","put","substring","lastIndexOf","length","then","response","history","push","catch","componentDidMount","get","data","render","form","Form","FirstName","LastName","Address","Phone","Manager","editCancelled","editContinued"],"mappings":"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","sourcesContent":["import React, { Component, ReactDOM } from 'react';\r\nimport axios from '../../../../axios';\r\nimport Aux from '../../../../hoc/Auxiliary/Auxiliary';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport Button from '../../../UI/Button/Button';\r\nimport classes from './SalespersonEdit.module.css';\r\nimport Input from '../../../UI/Input/Input';\r\n\r\nclass SalespersonEdit extends Component {\r\n\r\n    state = {\r\n        salesperson: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log('[SalespersonEdit] props = ', this.props);\r\n        const pathname = this.props.location.pathname;\r\n        axios.get('/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length))\r\n            .then(response => {\r\n                this.setState({ salesperson: response.data });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ error: true })\r\n            });\r\n    }\r\n    inputChangeHandler = (event) => {\r\n        const targetName = event.target.name;\r\n        const targetValue = event.target.value;\r\n        //console.log(event.target.name);\r\n        //console.log(this.state.salesperson[targetName]);\r\n        this.setState({ targetName: targetValue })\r\n    }\r\n\r\n    submitHandler = ( event ) => {\r\n        this.state.inputs.map( function(item, i) {\r\n          console.log(ReactDOM.findDOMNode(this.refs['input-' + i]).value);\r\n        }.bind(this))\r\n\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.salespersonForm) {\r\n            formData[formElementIdentifier] = this.state.salespersonForm[formElementIdentifier].value;\r\n        }\r\n        const submission = {\r\n            formData: formData\r\n        }\r\n        const pathname = this.props.location.pathname;\r\n        console.log(formData);\r\n        axios.put(\r\n            '/api/Salespersons/' + pathname.substring(pathname.lastIndexOf('/'), pathname.length), formData)\r\n            .then(response => {\r\n                this.setState({ loading: false });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false, error: true })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let form = null;\r\n        if (this.state.salesperson) {\r\n            form = (\r\n                <ul className={ classes.Form }>\r\n                    <li>\r\n                        <ul>\r\n                            <li>First Name:</li>\r\n                            <li><input type=\"text\" name=\"FirstName\" defaultValue={this.state.salesperson.FirstName} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Last Name:</li>\r\n                            <li><input type=\"text\" name=\"LastName\" defaultValue={this.state.salesperson.LastName} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Address:</li>\r\n                            <li><textarea name=\"Address\" defaultValue={this.state.salesperson.Address} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Phone:</li>\r\n                            <li><input type=\"text\" name=\"Phone\" defaultValue={this.state.salesperson.Phone} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Manager:</li>\r\n                            <li><input type=\"text\" name=\"Manager\" defaultValue={this.state.salesperson.Manager} onChange={this.inputChangeHandler} /></li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        } else if (this.state.error) {\r\n            form = (\r\n                <div>An error has occurred.</div>\r\n            );\r\n        } else {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <Aux>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <h3>Edit Salesperson</h3>\r\n                    {form}\r\n                    <Button \r\n                        btnType=\"Danger\"\r\n                        clicked={this.props.editCancelled}>CANCEL</Button>\r\n                    <Button \r\n                        btnType=\"Success\"\r\n                        clicked={this.props.editContinued}>CONTINUE</Button>\r\n                </form>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalespersonEdit;"]},"metadata":{},"sourceType":"module"}